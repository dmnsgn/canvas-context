"use strict";function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){_defineProperty(e,t,n[t])})}return e}const contextTypeList=["2d","webgl","experimental-webgl","webgl2","bitmaprenderer"];function createCanvasContext(e="2d",t={}){const{width:n,height:r,offscreen:o=!1,contextAttributes:c={},worker:a=!1}=_objectSpread({},t);if(!a&&!contextTypeList.includes(e))throw new TypeError(`Unknown contextType: "${e}"`);if("undefined"==typeof window&&!t.canvas)return null;const i=t.canvas||document.createElement("canvas"),l=(o||a)&&"OffscreenCanvas"in window?i.transferControlToOffscreen():i;if(Number.isInteger(n)&&n>=0&&(l.width=n),Number.isInteger(r)&&r>=0&&(l.height=r),a)return{canvas:l};let s;try{s=l.getContext(e,c)||("webgl"===e?l.getContext("experimental-webgl",c):null)}catch(e){s=null}return{canvas:l,context:s}}module.exports=createCanvasContext;
